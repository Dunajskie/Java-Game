/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.project;

//import com.mycompany.project.World;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.Objects;
import java.util.Scanner;
import javax.swing.text.JTextComponent;
/**




/**
 *
 * @author michal
 */
public class game extends javax.swing.JFrame {
    
    
    boolean alive;
    World w = new World();
    
    static StringBuilder sb;
    final String inputFilePath = "/Users/michal/Desktop/output.txt";
    /**
     * Creates new form game
     */
    public game() {
        initComponents();
         
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("xde");

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jScrollPane1.setEnabled(false);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setColumns(10);
        jTextArea1.setFont(new java.awt.Font("Monaco", 1, 21)); // NOI18N
        jTextArea1.setRows(10);
        jTextArea1.setText("Press \"s\" to start ");
        jTextArea1.setToolTipText("");
        jTextArea1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextArea1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Load");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Quit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(204, 204, 255));
        jTextArea2.setColumns(60);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(80);
        jTextArea2.setText("Commentator...");
        jScrollPane2.setViewportView(jTextArea2);

        jLabel2.setText("After saving or loading click on the plane");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(124, 124, 124)
                                .addComponent(jButton3)
                                .addGap(101, 101, 101)))
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
            File file = new File("savedata.txt");
FileOutputStream fos = null;
try{
fos = new FileOutputStream(file);
}
catch(IOException e){
System.out.println("error");
}
BufferedWriter f = new BufferedWriter(new OutputStreamWriter(fos));
try{
f.write(Integer.toString(w.Organisms.size()));
f.newLine();
for(int i=0;i<w.Organisms.size();i++)
{
    f.write(w.Organisms.get(i).getName());
    f.newLine();
    f.write(Integer.toString(w.Organisms.get(i).strength));
    f.newLine();
    f.write(Integer.toString(w.Organisms.get(i).x));
    f.newLine();
    f.write(Integer.toString(w.Organisms.get(i).y));
    f.newLine();
}
f.close();
jTextArea2.setText("World saved!");
}
catch(IOException e){
    System.out.println("error");
}
 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       
        for(int i=0;i<10;i++)
        {
            for(int j=0;j<10;j++)
            {
                w.space[i][j]=null;
            }
        }
        boolean was=false;
        String irrelevant;
        int xa;
        int ya;
        int sa;
        File file = new File("savedata.txt");
        try{
           Scanner inp = new Scanner(file);
           int org = Integer.parseInt(inp.nextLine());
           // String irr = wejscie.nextLine();
           //int szer = Integer.parseInt(wejscie.nextLine());
           //irr = wejscie.nextLine();
           //int wys = Integer.parseInt(wejscie.nextLine());
           //...
           for(int i=0; i<org; i++)
           {
               was=false;
               String line = inp.nextLine();
               for(int j=0;j<w.Organisms.size();j++)
               {
               if(line.equals(w.Organisms.get(j).getName()))
               {
                   w.Organisms.get(j).strength=Integer.parseInt(inp.nextLine());
                   xa=Integer.parseInt(inp.nextLine());
                   w.Organisms.get(j).x=xa;
                   ya=Integer.parseInt(inp.nextLine());
                   w.Organisms.get(j).y=ya;
                   w.space[xa][ya]=w.Organisms.get(j);
                   was=true;
               }
               }
               if(!was)
               {
                   sa=Integer.parseInt(inp.nextLine());
                   xa=Integer.parseInt(inp.nextLine());
                   ya=Integer.parseInt(inp.nextLine());                  
                   w.makeNew(xa, ya, sa, w, line);
                   
               }
               
           }
           sb = w.drawWorld();
           jTextArea1.setText(sb.toString());
           jTextArea2.setText("World loaded!");
       }
       catch(IOException e){
           System.out.println("error");
       }
 

 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
                    
    }//GEN-LAST:event_formKeyPressed

    private void jTextArea1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyPressed
        int c=evt.getKeyCode();
                    if (c == KeyEvent.VK_S) 
                    {
                        w.com.append("World Generated");
                        w.com.append("\n");
                    sb = w.drawWorld();
                    jTextArea1.setText(sb.toString());
                    jTextArea2.setText(w.com.toString());
                    }
                    else if (c == KeyEvent.VK_A) 
                    {
                    if(w.man.ability==false);
                    {
                       w.man.ability=true;
                    w.addComment("Human Ability");
                    w.addComment("\n");
                    jTextArea2.setText(w.com.toString());
                    }
                    }
                    else if (c == KeyEvent.VK_UP) 
                    {
                     w.HumanDirection(1);
                     alive=w.Maketurn();
                     if(!alive)
                      {
                        System.exit(0);
                       }
                    sb = w.drawWorld();
                    jTextArea1.setText(sb.toString());
                    jTextArea2.setText(w.com.toString());
                    }
                    else if (c == KeyEvent.VK_DOWN) 
                    {
                     w.HumanDirection(2);
                     alive=w.Maketurn();
                     if(!alive)
                      {
                        System.exit(0);
                       }
                    sb = w.drawWorld();
                    jTextArea1.setText(sb.toString());
                    jTextArea2.setText(w.com.toString());
                    }
                    else if (c == KeyEvent.VK_LEFT) 
                    {
                     w.HumanDirection(4);
                     alive=w.Maketurn();
                     if(!alive)
                      {
                        System.exit(0);
                       }
                    sb = w.drawWorld();
                    jTextArea1.setText(sb.toString());
                    jTextArea2.setText(w.com.toString());
                    }
                    else if (c == KeyEvent.VK_RIGHT) 
                    {
                     w.HumanDirection(3);
                     alive=w.Maketurn();
                     if(!alive)
                      {
                        System.exit(0);
                       }
                    sb = w.drawWorld();
                    jTextArea1.setText(sb.toString());
                    jTextArea2.setText(w.com.toString());
                    }
                    
    }//GEN-LAST:event_jTextArea1KeyPressed

    private void jTextArea1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextArea1AncestorAdded
        //StringBuilder str = new StringBuilder();
       // str.append("Press any key to start game!");
       // jTextArea1.setText(str.toString());
    }//GEN-LAST:event_jTextArea1AncestorAdded

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         
      
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new game().setVisible(true);
            }
        });
        
      
       
    }
    
    
    
    
 

    
    public static void save(JTextComponent text, String inputFile,World world) throws Exception {
 
  FileWriter writer = null;
  writer = new FileWriter(inputFile);

  text.write(writer);
 
  writer.close();
    }
 
    public static void load(JTextComponent text, String inputFile) throws Exception {
 
  FileReader inputReader = null;
 
  inputReader = new FileReader(inputFile);
 
  text.read(inputReader, inputFile);
 
  inputReader.close();
 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
